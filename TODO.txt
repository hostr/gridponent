Add modal edit feature.
Add validation elements to the modal.
Add a required attribute.

Change config.node to the top table container.
Since we have the ability to use the gridponent function to inject a grid anywhere,
we should account for the possibility that the user will try to inject two grids into the same element.

All main configuration options should be available through the API:
gridponent('selector')
	.model({...})
	.on('onread', function...)
	.on('onedit', function...);

Eliminate setting config.dataItem.

Test radio buttons in edit mode.

What happens if a grid is rendered twice? Make sure the original is disposed if this happens.

Add a change event to a column:
<gp-column field="IsCurrent" change="fns.isCurrentChanged"></gp-column>

Call gridponent function with a grid-ponent element to initialize manually.

Should we resolve JS config objects on demand? That would solve the problem of page ready for some config options but not others.

Footer template
edit class

Empty table template

Use Promises instead of callbacks for reads and writes.
<script src="https://www.promisejs.org/polyfills/promise-7.0.4.min.js"></script>

It's best to replace MVC's default JSON serializer with Json.NET:
http://labs.bjfocus.co.uk/2014/06/using-json-net-as-default-json-serializer-in-mvc/

Eliminate the helpers' dependencies on config.

Move the globals into a private variable. Currently they are all on the main object.

Use a CommonJS module library (e.g. webpack).

create a filter API:

node.api.filter({
	ID: [2,3,4],
	Name: ['Name1','Name2','Name3']
});

The model would apply it thusly:

select * 
from Products
where ID in (2,3,4)
and Name in ('Name1','Name2','Name3')


If paging is turned off, use client pager to sort and search.
Problem: we won't know whether we can use client pager until after we've retrieved data from the server.

Allow the http module to be configured to use JSON or application/x-www-form-urlencoded.

Add page size config option (default to 25).

Build a jQuery version.

Build a Polymer version.